class Tile
  attr_accessor :title, :puzzle, :assignment

  def initialize(title, puzzle)
    @title = title
    @puzzle = puzzle
    @assignment = {
      up: nil,
      bottom: nil,
      left: nil,
      right: nil
    }
  end

  def num_unmatched_tiles
    @assignment.values.count(&:nil?)
  end

  def assign_left(tile, side = '')
    return if @assignment[:left]
    @assignment[:left] = tile
    tile.assignment[:right] = self
  end

  def assign_right(tile, side = '')
    return if @assignment[:right]
    @assignment[:right] = tile
    tile.assignment[:left] = self
  end

  def assign_top(tile, side = '')
    return if @assignment[:up]
    @assignment[:up] = tile
    tile.assignment[:bottom] = self
  end

  def assign_bottom(tile, side = '')
    return if @assignment[:bottom]
    @assignment[:bottom] = tile
    tile.assignment[:up] = self
  end

  def connect_tile_with_self(tile, side)
    if tile.get_top == side
      tile.assign_top(self, side)
    elsif tile.get_bottom == side
      tile.assign_bottom(self, side)
    elsif tile.get_left == side
      tile.assign_left(self, side)
    else
      tile.assign_right(self, side)
    end
  end

  def flip
    @puzzle = @puzzle.split("\n").map(&:reverse).join("\n")
    @assignment[:left], @assignment[:right] = @assignment[:right], @assignment[:left]
    self
  end

  def rotate
    puzzle_array = @puzzle.split("\n")
    blank_puzzle = []

    puzzle_array.each_with_index do |row, row_index|
      row.split('').each_with_index do |value, col_index|
        blank_puzzle[col_index] ||= []
        blank_puzzle[col_index][puzzle_array.length - row_index] = value
      end
    end

    @assignment[:up], @assignment[:right], @assignment[:bottom], @assignment[:left] =
      @assignment[:left], @assignment[:up], @assignment[:right], @assignment[:bottom]

    @puzzle = blank_puzzle.map(&:join).join("\n")
  end

  def get_id
    @title.match(/\d.*/).to_s.to_i
  end

  def get_top
    @puzzle.split("\n")[0].to_s
  end

  def get_bottom
    @puzzle.split("\n")[-1].to_s
  end

  def get_left
    @puzzle.scan(/^./).join
  end

  def get_right
    @puzzle.scan(/.$/).join
  end

  def to_s
    @title
  end
end

def transform_to_obj(input)
  tiles = []
  input.each do |tile_str|
    title, puzzle = tile_str.split(":\n")
    tiles << Tile.new(title, puzzle)
  end
  tiles
end

def hash_tile_borders(tiles)
  hash = {}

  tiles.each do |tile|
    hash[tile.get_top.join] = tile
    hash[tile.get_left.join] = tile
    hash[tile.get_right.join] = tile
    hash[tile.get_bottom.join] = tile
  end
end

def connect_tiles(desired_tile, rotate_tile)
  top = false
  bottom = false
  left = false
  right = false

  count = 0

  while true
    if rotate_tile.get_left == desired_tile.get_right
      left
      break
    end

    if rotate_tile.get_right == desired_tile.get_left
      right = true
      break
    end

    if rotate_tile.get_top == desired_tile.get_bottom
      top = true
      break
    end

    if rotate_tile.get_bottom == desired_tile.get_top
      bottom = true
      break
    end

    count += 1
    rotate_tile.flip if count == 5
    rotate_tile.rotate
  end

  rotate_tile.assign_left(desired_tile) if left
  rotate_tile.assign_right(desired_tile) if right
  rotate_tile.assign_top(desired_tile) if top
  rotate_tile.assign_bottom(desired_tile) if bottom
end

def attempt_connect(hash, str, tile)
  if hash[str]
    connect_tiles(hash[str], tile)
    true
  elsif hash[str.reverse]
    connect_tiles(hash[str.reverse], tile)
    true
  else
    false
  end
end

def assign_matching_tiles(tiles)
  queue = [tiles.first]

  until queue.empty?
    hash = {}

    popped_tile = queue.pop
    popped_top = popped_tile.get_top
    popped_bottom = popped_tile.get_bottom
    popped_left = popped_tile.get_left
    popped_right = popped_tile.get_right

    hash[popped_top] = popped_tile unless popped_tile.assignment[:up]
    hash[popped_bottom] = popped_tile unless popped_tile.assignment[:bottom]
    hash[popped_left] = popped_tile unless popped_tile.assignment[:left]
    hash[popped_right] = popped_tile unless popped_tile.assignment[:right]

    tiles.each do |tile|
      next if tile == popped_tile

      top = tile.get_top
      bottom = tile.get_bottom
      left = tile.get_left
      right = tile.get_right

      queue << tile if attempt_connect(hash, top, tile) && !queue.include?(tile)
      queue << tile if attempt_connect(hash, bottom, tile) && !queue.include?(tile)
      queue << tile if attempt_connect(hash, left, tile) && !queue.include?(tile)
      queue << tile if attempt_connect(hash, right, tile) && !queue.include?(tile)
    end
  end
end

def get_corner_tiles(tiles)
  tiles.select {|t| t.num_unmatched_tiles == 2}
end

def multiply_id(tiles)
  tiles.inject(1) {|product, tile| product * tile.get_id }
end

def get_upper_left_corner(tiles)
  tiles.select {|t| t.num_unmatched_tiles == 2 && t.assignment[:right] && t.assignment[:bottom]}[0]
end

def flip_all_tiles(tiles)
  tiles.map {|x| x.flip }
end

def rotate_all_tiles(tiles)
  tiles.map {|x| x.rotate }
end

def combine_puzzle(tiles)
  upper_left_corner = get_upper_left_corner(tiles)
  complete_puzzle = []
  queue = [upper_left_corner]

  until queue.empty?
    tile = queue.shift
    queue << tile.assignment[:bottom] if tile.assignment[:bottom]
    row = []
    partial_puzzle = []

    until tile.nil?
      row << tile
      tile = tile.assignment[:right]
    end

    row.each do |tile|
      tile.puzzle.split("\n").each_with_index do |puzzle_line, puzzle_index|
        unless puzzle_index == 0 || puzzle_index == puzzle_line.length - 1
          partial_puzzle[puzzle_index] ||= []
          partial_puzzle[puzzle_index] << puzzle_line[1..-2]
        end
      end
    end

    complete_puzzle << partial_puzzle.reject(&:nil?).map(&:join)
  end

  complete_puzzle.map{|x| x.join("\n")}.join("\n")
end

def has_dragon_head?(line, index)
  line[index + 18] = '#'
end

def has_dragon_body?(line)
  line =~ /#....##....##....###/
end

def has_dragon_legs?(line, index)
  line[index + 1..-1] =~ /#..#..#..#..#..#/
end

def get_dragon_count(tiles)
  times_rotated = 0
  puzzle = combine_puzzle(tiles)
  iteration_count = 0
  max_dragons = 0
  until (iteration_count) > 10
    max_dragons = [max_dragons, count = count_dragons(puzzle.split("\n"))].max

    if times_rotated > 5
      flip_all_tiles(tiles)
      times_rotated = 0
    else
      rotate_all_tiles(tiles)
      times_rotated += 1
    end

    iteration_count += 1
    puzzle = combine_puzzle(tiles)
  end
  max_dragons
end

def dragon_length
  15
end

def count_dragons(puzzle)
  count = 0

  (1...puzzle.length - 1).each do |puzzle_index|
    puzzle_slice = puzzle[puzzle_index-1..puzzle_index + 1]
    while (index = has_dragon_body?(puzzle_slice[1]))
      if has_dragon_head?(puzzle_slice[0], index) &&
        has_dragon_legs?(puzzle_slice[2], index)

        puzzle_slice[1] = puzzle_slice[1].sub(/#....##....##....###/, '0....00....00....000')
        count += 1
      else
        puzzle_slice[1][index] = '.'
      end
    end
  end

  count
end

def count_hash(puzzle)
  puzzle.split("\n").sum{|x| x.count('#')}
end

def part1(input)
  tiles = transform_to_obj(input)
  assign_matching_tiles(tiles)
  corner_tiles = get_corner_tiles(tiles)
  multiply_id(corner_tiles)
end

def part2(input)
  tiles = transform_to_obj(input)
  assign_matching_tiles(tiles)
  completed_puzzle = combine_puzzle(tiles)
  dragon_count = get_dragon_count(tiles)
  count_hash(completed_puzzle) - dragon_count * dragon_length
end

def print_tiles_from_corner(tiles)
  p "Four corner tiles are: #{tiles.select {|t| t.num_unmatched_tiles == 2}.map(&:get_id)}"
  corner = get_upper_left_corner(tiles)
  queue = [corner]

  until queue.empty?
    tile = queue.shift
    queue << tile.assignment[:bottom] if tile.assignment[:bottom]


    until tile.nil?
      pp tile.puzzle
      p "#{tile.title} -> "
      tile = tile.assignment[:right]
    end

    puts " v "
  end
  puts
end

def debug_get_tile(tiles, id)
  tiles.select {|x| x.get_id == id}[0]
end

def debug_tile(tiles, id)
  tile = debug_get_tile(tiles, id)
  p "Tile #{id}: up #{tile.get_top} assigned to #{tile.assignment[:up]}" if tile.assignment[:up]
  p "Tile #{id}: left #{tile.get_left} assigned to #{tile.assignment[:left]}" if tile.assignment[:left]
  p "Tile #{id}: right #{tile.get_right} assigned to #{tile.assignment[:right]}" if tile.assignment[:right]
  p "Tile #{id}: bottom #{tile.get_bottom} assigned to #{tile.assignment[:bottom]}" if tile.assignment[:bottom]
end

def debug_tiles(tiles)
  # debug_tile(tiles, 1951)
  # debug_tile(tiles, 2311)
  # debug_tile(tiles, 3079)
  # debug_tile(tiles, 1489)
  # debug_tile(tiles, 1171)

  # tile = debug_get_tile(tiles, 1489)
  # tile.rotate
  # tile = tiles.select {|x| x.get_id == 1489}.first
  # pp tile.puzzle
  # p 'reversing'
  # pp tile.puzzle.split("\n").map(&:reverse).join("\n")
  print_tiles_from_corner(tiles)
  # tile.first.assignment.each  {|k, v| p "#{v} is on the #{k.to_s}" }
end

input = [
"Tile 1171:
.##...#...
.........#
....##....
#.#...##.#
.....#....
.#...#...#
###.......
.#........
#........#
#..##.##.#",

"Tile 3331:
..##.#....
#....#...#
#.........
#...#..##.
#.#...#..#
..#...##.#
.......#.#
.....#.###
##..##....
.#.#.###..",

"Tile 2273:
.###.#....
........##
#..##.....
...#..#.##
#.........
..#.......
.........#
##.......#
.##..#...#
.##.#.#.#.",

"Tile 2179:
.#..#.#...
##.#.#..#.
#...##.#.#
#.........
#..#...#.#
###.##...#
...##....#
.......#..
#.##.....#
#.#####.#.",

"Tile 2579:
.#...#....
##.....###
#######..#
#.......#.
###.....##
..#..#....
..#......#
.#...#...#
#.......##
#.####..##",

"Tile 1153:
.##.#.....
#.......#.
#...###.#.
..#....#.#
#...#...#.
#...##.###
#..#....#.
#.#......#
#..#.#...#
.##.###...",

"Tile 2311:
####.#..#.
#.#...#.##
#.......##
##.##.##.#
.......#.#
...#.....#
....##.#.#
#.##....#.
#.#...##.#
.##.####..",

"Tile 1579:
#..##.##..
.#.##..###
#...##.#.#
###.....#.
#.#......#
....#.#...
#.#..###..
......#.##
.#...#.#..
##.....##.",

"Tile 2351:
.##..###..
#.#..#..#.
#.......##
....#.....
#.....#...
......##..
...###....
#.##..#...
..#.##.#.#
.#.##.....",

"Tile 3761:
#..#.###..
.#...#....
.....##.#.
#..####...
#.##...#..
###..#.#.#
.#..#.#...
....#...#.
##..##.#.#
####.#....",

"Tile 1783:
##.####.#.
###..#.##.
#...#.#..#
##........
.#.....#.#
#.#...##.#
#..#..####
#..#...#..
#...#.#.#.
##.#...###",

"Tile 3259:
#.....#...
..###..#..
#.##...#.#
###.....##
####.#..#.
..........
#.....#...
###...#..#
#...#.....
.#..##.###",

"Tile 1721:
.#..#...#.
.#...#...#
#.....#...
#..#......
..#####...
#.#..#....
...#.#....
#...#.#...
.#.#..#..#
##...#..##",

"Tile 2749:
#...#.##..
##....#.##
..#....#.#
#...##....
...#.##.##
#..#...#.#
#.#...#..#
#.........
#..#...##.
..#...#.##",

"Tile 1259:
###.#..##.
.#..#...##
#.#.##..##
..#..#...#
.#..#.#.#.
#.........
##......#.
.####.#...
.##....#.#
....##.#..",

"Tile 2683:
.#.######.
#...##...#
##.#..#...
..#.##...#
.....#.#.#
#..#.#....
#.###.....
#.....#.##
#.........
..#...#.#.",

"Tile 1217:
.##..#.###
#.....#.#.
#.......#.
#...##..##
#...##.#..
...#.###.#
##.#....##
.....#....
.#.#...#.#
....##...#",

"Tile 2251:
##.##.....
#.#.....#.
##..#..#..
###..##.#.
#.##...#.#
.........#
####..#...
..#..##.##
.##.##.#..
.##......#",

"Tile 2791:
##.#.###.#
#.......##
#....#...#
##....##..
#...##..#.
#..#..#...
###..#....
....######
##.#.#..##
.....#....",

"Tile 1879:
##..###.##
##.......#
.#..#.##..
.##.......
.#..#....#
#.#......#
##......##
...#....##
#.##..####
.##...###.",

"Tile 2029:
..#...##..
..##..#.##
.##....#..
#...#...#.
#.......##
......#.##
........#.
##.#..#...
..#.......
...#...###",

"Tile 1451:
.........#
....#...#.
##..#....#
.....#....
.....#....
....#.....
#.........
...#.#...#
.......#.#
.#####.#.#",

"Tile 1091:
#...#.#..#
#.#......#
#........#
....##...#
#..#.#....
#.......##
...#.....#
#.........
##.....##.
..#.#..##.",

"Tile 3343:
#.#.#...##
#..#......
#......#..
..#..#..##
##.##.####
#...#.#..#
..........
.##..#...#
..#...#..#
..######.#",

"Tile 3299:
##.#..#..#
..##..#...
....##...#
##.....#..
#.#.#..#..
........##
##........
##.##.#..#
####.#.#..
........##",

"Tile 1873:
#..#...#.#
##..##....
#...##.#.#
..##.###..
.##....#..
.#.......#
#.......#.
.#......##
#........#
#..#..#...",

"Tile 2741:
.#...##.#.
#......#..
##........
..#..#....
.####.##..
......#...
...#..#..#
..........
#.........
.#####.#.#",

"Tile 1907:
#...##.#..
....#...#.
...#..#...
..##..#.#.
.#.#......
###......#
#........#
..##..####
...#.....#
##..#..##.",

"Tile 1019:
.###.#..#.
##........
.###....##
...#..#.#.
....###..#
.#.#.#..##
..##......
#.#....#..
..#..#...#
#.#.##..##",

"Tile 3469:
.#.#.###.#
###.......
..#..#..#.
.#.#.....#
.#.##.##..
##.##...#.
.###.....#
.##..#...#
#.##.#..#.
.###.#####",

"Tile 3067:
...#.####.
#...#.#...
.#.....#..
....#.#...
#....##..#
#.........
#.#..##..#
#.........
#........#
.....##.##",

"Tile 3121:
#.####..##
#..#....#.
.#........
#.#...#.#.
#.#.#....#
##.......#
...#.#...#
#...##.#..
.#......#.
#...#.#.##",

"Tile 1543:
#.####.##.
.#..#...##
###.#...#.
##.#.#...#
#.##...#.#
.......#.#
.....#..##
..#.....#.
..........
..#..###.#",

"Tile 2089:
##.......#
..#..##.##
##...#....
......#..#
#...###..#
#...#....#
##..##.#..
.....##..#
#.......##
#...######",

"Tile 2153:
###..#...#
##.#.#....
.#........
###.##.#..
.##..#....
##....#.#.
#..#..#...
...#.##...
.........#
.#..#.....",

"Tile 2347:
..##.####.
#.#.##....
.##....#.#
##...#....
.#...#...#
..#.......
.........#
#.........
.....####.
.##...#.#.",

"Tile 1087:
..#.##..##
#...#.#..#
#.####...#
#....#..##
#...#....#
#.....#...
........#.
.###......
..##.....#
#..#.#..#.",

"Tile 2423:
..####.###
...#..#..#
....####.#
#...##...#
#..##....#
#..#.#..##
##..#.#.##
..#...#...
###..##.#.
...##.#..#",

"Tile 3923:
......###.
#..#....#.
#.##..#..#
##.....#..
.#...#..##
....#..#..
#...#....#
..#......#
##..#.#...
.#....#..#",

"Tile 3947:
.#.###...#
#...#....#
..#..#...#
...##.....
...#.....#
#..##....#
.......#..
#........#
#.....#...
#..######.",

"Tile 3833:
....##.##.
...#.##..#
##....##.#
#....#....
#...#.....
#..#..#..#
..#..#....
#.....#..#
.#....###.
#.#.######",

"Tile 2339:
.##.#.##..
#.#.......
#.#....#..
.#.#...#..
#.###...##
#.##....##
...#.....#
...##..#.#
###.....#.
##.#..##.#",

"Tile 2221:
#.##.##..#
..#.......
#.......#.
#.....#..#
...#..####
..#....#..
#..#......
#......#.#
#.#.#.#..#
...##.##.#",

"Tile 3319:
....#..##.
...##..###
#........#
##.##..#..
..##..#.#.
#...#.....
......#...
##.#......
.#.##..#.#
#...#.#.#.",

"Tile 3511:
#..##.####
..#.......
#..##.....
#.#..#..#.
...##.#.#.
##......#.
...#...#.#
#..##.##.#
.###....#.
#.######..",

"Tile 3677:
#.....##..
..#..##...
#.##.#..##
##.#...#.#
.#......#.
..#..#....
.#.#.#...#
..#.......
..#......#
......#.#.",

"Tile 3919:
##...##.#.
..#.##..#.
#...#....#
.#..#.#...
#.#...#...
......###.
.....###.#
#.#.....##
.###.#...#
#....#####",

"Tile 2879:
#....##..#
.#.##...#.
####.#.##.
##...###..
.#......#.
#..###...#
#........#
......#.##
..#.#....#
...###..#.",

"Tile 3613:
.####....#
....#...##
#.##.#....
#.#....#..
##....#..#
##...###.#
.#....#..#
#.....#...
##........
#.#...##..",

"Tile 1523:
.#.##.#.##
#.####.###
......#...
#.....##.#
###.##....
..#...###.
......#.##
#....#....
#...#.##..
##....#...",

"Tile 2111:
##..##..#.
.##......#
...#.##...
......#..#
#.####..##
#.####...#
#......##.
...#.#.###
#..##....#
....#.#.#.",

"Tile 2539:
..##.##.#.
#.....#...
....#.#.#.
.....#..#.
..#..####.
...####..#
..........
......#..#
...#####.#
..##..####",

"Tile 1459:
....#.#..#
#...##...#
...##.#...
.##..#.###
.#...##..#
....#.#..#
#..#..#...
#.#.#..#..
#.#.......
#.##....##",

"Tile 1193:
..#.#..#..
.#....#...
#..#.....#
..........
.....#.#.#
#.#..#.#.#
........#.
.......##.
#.#...#...
.#####.##.",

"Tile 2591:
.###...##.
.###....##
###...#.##
..##.....#
........##
.........#
#..#..#..#
..#.....##
..#.#..##.
#########.",

"Tile 3571:
##.......#
....#.....
##.##..#..
.#...#...#
...##..###
##.##...##
.....#.#..
...##.#...
#..##.#...
#..#..#.#.",

"Tile 3203:
.#...#.###
.#.#.#...#
.#......##
#.#..#..#.
##.##.#.#.
.#..#.#...
...##.....
.#..#..###
#.##....##
#.#...###.",

"Tile 3739:
#...##.#.#
...##..#.#
..#.......
##........
##......#.
#....#.##.
.#..####..
...#...#.#
.....##..#
#..####...",

"Tile 3109:
...####..#
#.#..#...#
..#....#.#
##.#.....#
#....#.#..
..#.....##
.....#.#..
...##....#
.#.....#.#
.#....#.#.",

"Tile 3019:
##.##..###
.#.....#.#
.#....#..#
#.#.#....#
....#.....
#.....#...
...#.#....
####.##.##
....#.....
##.....###",

"Tile 3467:
#.#####.#.
#...#....#
.....###..
.#.#.##.##
#...#...#.
....##...#
.#..#.....
#...#...##
....##...#
.#...#.#.#",

"Tile 3709:
.#..#.##..
..#.......
#.....#...
..##..#...
...#...###
#.....####
#..#.....#
#...#..#..
#..#.....#
##.#.#..#.",

"Tile 2843:
#...#..#.#
##.##.#...
....#.....
#...#...##
#......#..
#.#......#
#.....###.
#.#......#
...##.....
#.###.#...",

"Tile 3061:
#...#.##.#
#..#....##
..#.....##
.#.#..#..#
#......#..
##....#..#
##.#.....#
.....#.##.
.#.##.#..#
##.##.#..#",

"Tile 2731:
..#....##.
.#..##....
##.....#.#
........#.
.#.......#
#...#.....
#..#......
.#..#####.
#..###.#.#
##.#######",

"Tile 1291:
###...##..
....#....#
..#.##.###
##....##..
...#.#...#
#..#.#...#
##..#.#...
#..#..##.#
.....#..#.
###.#..#..",

"Tile 1237:
...#...#..
#####.....
....#....#
#.#..##...
...##....#
#.#......#
.##.......
.##.....##
.....##.##
##.#.#.#.#",

"Tile 2797:
.#..#.##.#
.####....#
####.....#
#.##...#..
#...#...##
...#.....#
...###....
.#....#..#
.........#
.###.#.#..",

"Tile 3209:
##..##.###
.......###
##.....#.#
#.#.....#.
.#...#...#
#...###.##
.#..##..##
....#.###.
..#...####
.#####..#.",

"Tile 2657:
##..##.#.#
....#.#...
....#.#...
..##..##.#
.##...####
.#.#.##..#
..........
#........#
.......###
.##...#..#",

"Tile 2903:
#.#.######
.###..#...
..##...#.#
...#......
..#.....##
.#....#...
.#..#...#.
##..##...#
#.#......#
..###.##.#",

"Tile 1361:
..#.##.#.#
.#...#...#
...#...#..
....#...#.
...#.#.#.#
...#..#...
.#.##.##.#
..........
##.#...###
...#..#.#.",

"Tile 3863:
...#....##
...##...#.
.......###
....#.....
...##...#.
##.....#..
#.......##
.......#.#
.....#.#.#
..#..####.",

"Tile 1013:
....#.....
#.##.##...
#..##.#...
#....#....
####...###
.........#
..#.....#.
#..#.#....
...###.#.#
.##...####",

"Tile 2267:
#......#..
#.#####...
####....#.
#...#.....
#...#...#.
..#.###..#
..#.......
..#..#...#
#.##.##...
.#...#....",

"Tile 3581:
#..#.#.###
...###.#.#
.........#
#..#....##
........#.
...#.#....
......#.##
##..#..#..
...#.###.#
###..##.##",

"Tile 3797:
...##.#..#
.....#.#..
.....#...#
#.....#.##
##....##.#
#.....#...
#..#..##..
#.....#.##
#.#...###.
..#.##..#.",

"Tile 2521:
#.#.###.#.
.#.....#.#
#...#.....
..#.......
.#.....#..
#.###.#...
#....##...
.#....##..
..#.#.#.#.
##.#.#..##",

"Tile 2927:
..###..#..
#...#.....
#.##.#....
##....#.#.
#.#...##.#
###....###
#...#....#
..#.#.#.##
..#......#
...#.##...",

"Tile 3499:
##..###.##
#.#.#...##
....#.....
....#.#...
...#.#.#.#
.....##.#.
.....#.#..
...#.###.#
......#.#.
..#.#####.",

"Tile 2053:
.#.##.##..
###.##.#..
#.#####..#
....#.....
#..##.#..#
.#...#...#
....##...#
#.....#...
###..##...
.#.#...##.",

"Tile 1033:
######.#..
#...##...#
#.....#.#.
#.#.#....#
...#...#.#
###..#...#
.#..#...#.
...##.#..#
....#.#...
.#..###.#.",

"Tile 1109:
###.#.#..#
##..##....
.....#..#.
#....#..##
.#.#.##..#
#...###..#
#...#.....
###.##...#
#.#.#.#...
####..#.#.",

"Tile 2333:
##.#.#..#.
#..##...##
.....##..#
.#.##..#..
.##.#.####
...#..##.#
.........#
###..#....
#.#...##.#
#...####..",

"Tile 2713:
.###.####.
...#...#.#
....#...##
#..#...#.#
#.#.......
....###.#.
##.#...#.#
#..##.#..#
#.#.#.....
..#.##.#.#",

"Tile 2141:
#####..#..
..#..#....
#.......#.
.#......#.
#...##....
......##.#
#.#...#..#
.#......##
...#....##
##....#.#.",

"Tile 3607:
...#.##..#
#......##.
.##.##.#.#
..##....##
...##..###
...#......
...#..#.##
##..#...#.
.#.#..#.##
.#..#.#.#.",

"Tile 3691:
.#.####..#
###..#..#.
...#......
#..#...#.#
#..#..#..#
..#.#....#
#.#......#
....#....#
#....##..#
.#..##.###",

"Tile 2237:
#.#.#...#.
#.#.##....
.#..##...#
...#..#..#
.#.....#..
##..###...
.#..#..#..
#.###.....
.#..#....#
.#.#.###..",

"Tile 1483:
...####.##
#....###..
....#.#..#
.###......
#..#.#.#..
.#...#....
.#.......#
.#..#..#..
#.#..###.#
#...####..",

"Tile 1697:
.#.####...
......#.##
.......##.
##.##.##..
..##..#.##
##.##....#
#..#.#..##
...#....#.
..##...#..
.###.####.",

"Tile 1949:
...#.##..#
#....#....
.........#
..#..#...#
..........
...#....#.
#.#.#....#
.###....#.
##..#.###.
..#.#.....",

"Tile 2269:
.#...##...
.##...#...
.#.......#
.#.#...#..
.#.##.#...
#..#######
##.#.#...#
###.......
.....#.#..
.##.#.##..",

"Tile 1097:
.##..##.#.
.#........
....#...##
#...#....#
....#....#
......#..#
..####....
#..#..#..#
#.#..##..#
.....##...",

"Tile 1307:
#.#..##..#
##..#..#..
#.#..##..#
..#......#
#.#..##..#
#..#.#.#..
..#.#.#..#
......#..#
##.......#
####.###..",

"Tile 3323:
..##.##..#
##....####
##.....###
..#......#
.#.#.#..#.
#......#.#
......##.#
..##..##.#
##........
...#..#..#",

"Tile 2467:
.#####.#..
...#....##
#...###...
##........
.........#
....#....#
.#.#..#.#.
...#.....#
#...##..##
...#.###..",

"Tile 2389:
..##.#...#
....#....#
..##.###..
.###...###
#.#.....#.
......##..
..#.#...##
#....#.#.#
.......#..
#..#..#.##",

"Tile 2633:
####...#..
.#..#..#.#
#.#.#.#..#
.##.#...##
...#....##
##.#.#...#
#####...##
#....###.#
#.....#...
.##.##.#..",

"Tile 2473:
...##...##
....#.#..#
..####.#.#
..#.#..#..
#...#...#.
...#....##
#.#.....##
.....#....
#..#..##.#
.#.###....",

"Tile 2243:
.#.##.#.#.
......#.#.
.#.......#
#.#..#...#
....#..#.#
.##..#.#..
.#....#..#
.....#...#
##.......#
..##.#..##",

"Tile 3547:
####.###.#
#...#....#
#...#.#..#
.#.....#.#
##.....###
.....###..
.....#..##
#..#.....#
..#...#..#
.#########",

"Tile 2837:
#.##.#...#
#.#..#...#
..#......#
#..###.#.#
##.......#
#.#......#
#......##.
#..##.#.##
#.#.......
###.#.#.#.",

"Tile 3727:
.###.#...#
..#..#.#..
.#..#....#
...#...#.#
####......
.#...#..##
##.....###
.....#...#
....###.#.
..#..#....",

"Tile 3391:
.##..###..
####..##.#
#...##....
.#...#..##
......#...
#.##.#.#.#
..#.#.....
..#.#....#
#.........
...##.##..",

"Tile 3529:
.#.###..#.
##.##.....
..#.....#.
#...###..#
#.#.#....#
.#.#.##...
###..#...#
.#..#...#.
...##..#.#
.#.#..####",

"Tile 3181:
.#.#####..
#..#..#...
#..#..##..
#.#.....##
##....##..
.#.....###
..##....##
#.#......#
....##....
###.##...#",

"Tile 1429:
..########
#..##.#...
...#.#..##
..#......#
.....#....
#......#..
#....#.#..
.#...#..#.
#....#..#.
..###...#.",

"Tile 3907:
##....##..
..#.#.##.#
.###....##
....#..#.#
#.##......
...#......
###...#.##
...##....#
..#.#...#.
##.#.#.#..",

"Tile 2609:
..##.##...
#.##...###
.#.......#
.#........
#.##.##.##
...#....#.
........#.
......##.#
####......
#.#...####",

"Tile 1597:
##....##.#
#..#...###
.##......#
#.#...##..
......####
#..#.....#
...#...#..
##...#....
##........
.#.#..##..",

"Tile 1567:
#.#.##....
........#.
#......#..
......#...
##.....#.#
#...##....
#........#
#...##...#
.#...#.#..
..##.#..##",

"Tile 3671:
.###..####
#..#..##..
#....#...#
..##.#...#
##...#...#
#..###...#
#..#.#..##
..........
.........#
###..#..##",

"Tile 2909:
#...######
#..#.#....
.#...#..##
...##..#.#
....#.#...
#.##..#.##
##.......#
##.#......
#.......##
.#..#.#..#",

"Tile 2297:
...#.#....
.#......#.
###...##..
.###.....#
##.#.#....
..#.......
#......#..
##......#.
.#........
#..#.####.",

"Tile 2129:
#.........
..#.#....#
##.......#
#........#
...#.#.#.#
#........#
.#.#.#...#
...##.##..
#.........
##.#.###.#",

"Tile 2383:
##...#..##
##.###....
..#...#..#
##........
....#.#.#.
#.#....#..
...#.....#
##..##.#..
.....##.##
##..##..#.",

"Tile 1327:
.#.##..##.
##.....#.#
#..#.#....
........##
..#.......
#.......#.
#..#...#.#
#.#...#...
#.#.......
...###.#..",

"Tile 3313:
#.#.....#.
#...#.#...
.....###..
.....#....
......#..#
#........#
.#.......#
#...#.#...
.....#..#.
####....#.",

"Tile 3041:
##..#.#.##
#.......#.
#.#.#.#...
.#.##..##.
#..#......
..##..###.
#.##....##
#.....#...
..#.......
.......##.",

"Tile 1951:
#..##.###.
.#..#.##.#
###.....#.
#.#.......
##....##.#
#.....#.##
........#.
.#.....#.#
.###.....#
..#...##..",

"Tile 1861:
.##..#..##
#..#.#...#
..#.#.....
......#...
.......#.#
#.#...#..#
.#...#..##
#.#.......
#..##.##..
.......##.",

"Tile 3361:
####.##.##
##.#.##...
.........#
#.....#...
##....#.#.
..#......#
.#.#....##
##.#.#.#..
......#...
.....#.##.",

"Tile 3449:
..##.#.#..
#..#...#..
.....##...
#........#
.......##.
.##.#....#
#..##..#.#
........#.
.........#
#.#..#...#",

"Tile 3217:
#..#...#..
#..#.#.#.#
.......#..
#....#..#.
#........#
#...#...#.
##...#...#
.##.......
##........
...#.##.#.",

"Tile 3187:
...#.###..
..#.##.###
#.#.......
#..##..#..
#.##....##
#.###.####
...#.#....
..........
#.........
.##....#.#",

"Tile 3719:
.####.#.##
.#...#...#
##....###.
#.##..#...
....##...#
..#.#.##.#
.......#..
.....##.##
#.....##.#
#.##.#..#.",

"Tile 3967:
.#..#.#.#.
#.#.#....#
.#....#...
#.....#...
.......#..
#.........
.#..#.....
#..#......
..#..#.###
...####.##",

"Tile 1373:
...#.##.##
#.......##
##........
......###.
#....#...#
...#...#..
#.#.###...
#.#.....##
#...#....#
...#.#...#",

"Tile 2833:
...#.#...#
...#..#..#
.##.#.##..
#..#...#.#
##.##.#...
..........
....#..#..
#.#..##..#
#......#..
..##..###.",

"Tile 2543:
#.#..#....
.........#
...#....##
..#......#
...#.#....
#....#.#..
#.....##.#
#..#...###
###.....##
###.##...#",

"Tile 3389:
......###.
#.###.##..
..##.....#
#.#..#..#.
##....#.#.
##.#...#.#
.##.....#.
.#.#...#..
#..##..#..
#####.#...",

"Tile 2039:
....##...#
#......##.
.##....#..
#.....#..#
#####...#.
#..##...##
.....##.##
#..#.##..#
#..####.#.
#.#.###.#.",

"Tile 3701:
########..
#....#...#
#..#..#.##
#......#..
.....####.
#.....#..#
#.........
...#.#.#..
......#.#.
#####.###.",

"Tile 3407:
#...##.#..
##.###..##
#.#..#..#.
.#..#.....
..##.....#
#..##.....
#...#..#.#
.....#.#.#
.#.#......
##.#.##.#.",

"Tile 3793:
.##.####.#
.#.#.#...#
.#...#.#.#
#...#.#.##
.#....#.#.
..#..#...#
.##.......
.##.....##
##..##....
....##.##.",

"Tile 2851:
....#####.
......##..
..#.....#.
#.....#..#
###...####
#.........
#..##...##
#..###..##
#.###.#.##
####..##..",

"Tile 1913:
##.#.#...#
.....#.#..
#...#.##.#
.#...###..
...##.....
.#.#.#.###
.#.#......
......#...
.#...#...#
..#.#.#..#",

"Tile 3457:
#.#.#.##.#
.#..#...#.
.###..#..#
#.#....#.#
.#.....##.
....#..#..
..#...##.#
##........
###....#..
...#..##.#",

"Tile 2969:
##.#..####
####...##.
......#...
..##..#.##
..#....#.#
..#..#..#.
#......#..
.....#..##
#.#.......
.#...#.##.",

"Tile 1303:
##.#.#####
..##.##..#
....#..#.#
##........
#..#....#.
..##..#.##
..##...##.
#...#.....
..###..#..
..##.#.###",

"Tile 1279:
.##.#.#...
.....##.#.
#..#.....#
.....#..#.
....##.#..
........#.
#....#....
#...#....#
#......#.#
.####...#.",

"Tile 3593:
#...##.#.#
..#.....##
##..#....#
....#.#...
..#.......
.#.#...#..
..#....#.#
..##.....#
.#...#....
..#####.#.",

"Tile 1231:
.#.###..##
#...##.#.#
..#....#..
#........#
..##..#.#.
#........#
........#.
#.......#.
#.#.#..#..
.#....###."
]

dummy_input = [
  "Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###",

"Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..",

"Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...",

"Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.",

"Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..",

"Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.",

"Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#",

"Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.",

"Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...",
]

p "Part 1: #{part1(input)}"
p "Part 2: #{part2(input)}"
# pp tiles.first.to_s.scan /^./ # Gets left column
# pp tiles.first.to_s.scan /.$/ # Gets right column
# pp tiles.first.to_s.split("\n")[0].split('') # Gets top column
# pp tiles.first.to_s.split("\n").last.split('') # Gets bottom column
